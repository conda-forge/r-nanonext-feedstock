From 598ac6c7bec2eb5c9963fddab3e2cc610c95d13a Mon Sep 17 00:00:00 2001
From: Daniel Nachun <daniel.nachun@gmail.com>
Date: Wed, 23 Oct 2024 20:15:06 -0700
Subject: [PATCH] use dynamic libs on Windows

---
 configure         | 163 ----------------------------------------------
 configure.ucrt    |  20 ------
 src/Makevars.ucrt |   4 +-
 3 files changed, 2 insertions(+), 185 deletions(-)

diff --git a/configure b/configure
index e3f0bfb..71b5aef 100755
--- a/configure
+++ b/configure
@@ -1,9 +1,5 @@
 #!/bin/sh
 
-# Library versions
-LIB_VER="b7298cf"
-TLS_VER="daca7a3"
-
 # Initialise
 PKG_CFLAGS=""
 PKG_LIBS="-lnng -lmbedtls -lmbedx509 -lmbedcrypto"
@@ -30,165 +26,6 @@ then
   PKG_LIBS="$PKG_LIBS -latomic"
 fi
 
-# Force build bundled libs
-if [ -z "$NANONEXT_LIBS" ]; then
-
-# Find MbedTLS and compile if necessary
-if [ "$INCLUDE_DIR" ] || [ "$LIB_DIR" ]
-then
-  PKG_CFLAGS="-I$INCLUDE_DIR $PKG_CFLAGS"
-  PKG_LIBS="-L$LIB_DIR $PKG_LIBS"
-  echo "Found INCLUDE_DIR $INCLUDE_DIR"
-  echo "Found LIB_DIR $LIB_DIR"
-elif [ -d "/usr/local/include/mbedtls" ]
-then
-  PKG_CFLAGS="-I/usr/local/include $PKG_CFLAGS"
-  PKG_LIBS="-L/usr/local/lib $PKG_LIBS"
-  echo "Found 'libmbedtls' $PKG_CFLAGS"
-elif [ -d "/usr/include/mbedtls" ]
-then
-  PKG_CFLAGS="-I/usr/include $PKG_CFLAGS"
-  PKG_LIBS="-L/usr/lib $PKG_LIBS"
-  echo "Found 'libmbedtls' $PKG_CFLAGS"
-elif [ -d "/usr/local/opt/mbedtls" ]
-then
-  PKG_CFLAGS="-I/usr/local/opt/mbedtls/include $PKG_CFLAGS"
-  PKG_LIBS="-L/usr/local/opt/mbedtls/lib $PKG_LIBS"
-  echo "Found 'libmbedtls' $PKG_CFLAGS"
-fi
-echo "#include <mbedtls/version.h>
-int main() {
-#if MBEDTLS_VERSION_MAJOR < 2 || MBEDTLS_VERSION_MAJOR == 2 && MBEDTLS_VERSION_MINOR < 5
-    *(void *) 0 = 0;
-#endif
-}" | ${CC} ${PKG_CFLAGS} -xc - -o /dev/null > /dev/null 2>&1
-
-else
-  echo "NANONEXT_LIBS is set... skipping detection"
-  false
-fi
-
-if [ $? -ne 0 ]
-then
-  echo "No existing 'libmbedtls' >= 2.5 found"
-  echo "Detecting 'cmake'..."
-  which cmake
-  if [ $? -ne 0 ]
-  then
-    export PATH=$PATH:/Applications/CMake.app/Contents/bin
-    which cmake
-    if [ $? -ne 0 ]
-    then
-      echo "Required 'cmake' not found"
-      exit 1
-    fi
-  fi
-  echo "Detecting 'xz'..."
-  which xz
-  if [ $? -ne 0 ]
-  then
-    tar -xf src/mbedtls-$TLS_VER.tar.xz
-    if [ $? -ne 0 ]
-    then
-      echo "No 'xz' command found"
-      exit 1
-    fi
-  else
-    xz -dc src/mbedtls-$TLS_VER.tar.xz | tar -xf -
-  fi
-  cd mbedtls-$TLS_VER
-  echo "Compiling 'libmbedtls' from source ..."
-  cmake -DCMAKE_INSTALL_PREFIX=../install .
-  cmake --build . --target install
-  cd ..
-  rm -rf mbedtls-$TLS_VER
-fi
-
-# Force build bundled libs
-if [ -z "$NANONEXT_LIBS" ]; then
-
-# Find NNG and compile if necessary
-if [ "$INCLUDE_DIR" ] || [ "$LIB_DIR" ]
-then
-  NNG_CFLAGS="-I$INCLUDE_DIR"
-  NNG_LIBS="-L$LIB_DIR"
-elif [ -d "/usr/local/include/nng" ]
-then
-  NNG_CFLAGS="-I/usr/local/include"
-  NNG_LIBS="-L/usr/local/lib"
-elif [ -d "/usr/include/nng" ]
-then
-  NNG_CFLAGS="-I/usr/include"
-  NNG_LIBS="-L/usr/lib"
-elif [ -d "/usr/local/opt/nng" ]
-then
-  NNG_CFLAGS="-I/usr/local/opt/nng/include"
-  NNG_LIBS="-L/usr/local/opt/nng/lib"
-fi
-
-echo "#include <nng/nng.h>
-int main() {
-#if NNG_MAJOR_VERSION < 1 || NNG_MAJOR_VERSION == 1 && NNG_MINOR_VERSION < 6
-    *(void *) 0 = 0;
-#endif
-}" | ${CC} ${NNG_CFLAGS} -xc - -o /dev/null > /dev/null 2>&1
-
-else
-  echo "NANONEXT_LIBS is set... skipping detection"
-  false
-fi
-
-if [ $? -ne 0 ]
-then
-  echo "No existing 'libnng' >= 1.6 found"
-  echo "Detecting 'cmake'..."
-  which cmake
-  if [ $? -ne 0 ]
-  then
-    export PATH=$PATH:/Applications/CMake.app/Contents/bin
-    which cmake
-    if [ $? -ne 0 ]
-    then
-      echo "Required 'cmake' not found"
-      exit 1
-    fi
-  fi
-  echo "Detecting 'xz'..."
-  which xz
-  if [ $? -ne 0 ]
-  then
-    tar -xf src/nng-$LIB_VER.tar.xz
-    if [ $? -ne 0 ]
-    then
-      echo "No 'xz' command found"
-      exit 1
-    fi
-  else
-    xz -dc src/nng-$LIB_VER.tar.xz | tar -xf -
-  fi
-  cd nng-$LIB_VER
-  echo "Compiling 'libnng' from source ..."
-  cmake -DCMAKE_INSTALL_PREFIX=../install .
-  cmake --build . --target install
-  cd ..
-  rm -rf nng-$LIB_VER
-else
-  echo "Found 'libnng' $NNG_CFLAGS"
-  PKG_CFLAGS="$NNG_CFLAGS $PKG_CFLAGS"
-  PKG_LIBS="$NNG_LIBS $PKG_LIBS"
-fi
-
-if [ -d "install/lib64" ]
-then
-  PKG_CFLAGS="-I../install/include $PKG_CFLAGS"
-  PKG_LIBS="-L../install/lib64 $PKG_LIBS"
-fi
-if [ -d "install/lib" ]
-then
-  PKG_CFLAGS="-I../install/include $PKG_CFLAGS"
-  PKG_LIBS="-L../install/lib $PKG_LIBS"
-fi
-
 # Write to Makevars
 sed -e "s|@cflags@|$PKG_CFLAGS|" -e "s|@libs@|$PKG_LIBS|" src/Makevars.in > src/Makevars
 
diff --git a/configure.ucrt b/configure.ucrt
index 876a136..b59f78e 100755
--- a/configure.ucrt
+++ b/configure.ucrt
@@ -1,22 +1,2 @@
-# Library versions
-LIB_VER="b7298cf"
-TLS_VER="daca7a3"
-
-tar -xf src/mbedtls-$TLS_VER.tar.xz
-cd mbedtls-$TLS_VER
-echo "Compiling 'libmbedtls' from source ..."
-cmake -G "Unix Makefiles" -DCMAKE_INSTALL_PREFIX=../install .
-cmake --build . --target install
-cd ..
-rm -rf mbedtls-$TLS_VER
-
-tar -xf src/nng-$LIB_VER.tar.xz
-cd nng-$LIB_VER
-echo "Compiling 'libnng' from source ..."
-cmake -G "Unix Makefiles" -DCMAKE_INSTALL_PREFIX=../install .
-cmake --build . --target install
-cd ..
-rm -rf nng-$LIB_VER
-
 # Success
 exit 0
diff --git a/src/Makevars.ucrt b/src/Makevars.ucrt
index 11b714f..4fd01ea 100644
--- a/src/Makevars.ucrt
+++ b/src/Makevars.ucrt
@@ -1,2 +1,2 @@
-PKG_CFLAGS=-I../install/include -DNNG_STATIC_LIB $(C_VISIBILITY)
-PKG_LIBS=-L../install/lib -lnng -lmbedtls -lmbedx509 -lmbedcrypto -lbcrypt -lws2_32
+PKG_CFLAGS=$(C_VISIBILITY)
+PKG_LIBS=-lnng -lmbedtls -lmbedx509 -lmbedcrypto -lbcrypt -lws2_32 -lucrt
-- 
2.45.2

